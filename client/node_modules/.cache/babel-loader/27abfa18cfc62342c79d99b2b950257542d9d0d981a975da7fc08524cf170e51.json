{"ast":null,"code":"var _jsxFileName = \"/Users/byungsoochoi/Desktop/couple-album/client/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./UploadForm.css\";\nimport { toast } from \"react-toastify\";\nimport ProgressBar from \"./ProgressBar\";\nimport { ImageContext } from \"../context/ImageContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const {\n    setImages,\n    setMyImages\n  } = useContext(ImageContext);\n  const [imageFiles, setImageFiles] = useState(null);\n  const [previews, setPreviews] = useState([]);\n  const [percent, setPercent] = useState(0);\n  const [isPublic, setIsPublic] = useState(true);\n  const inputRef = useRef();\n  const imageSelectHandler = async event => {\n    const imageFileInfo = event.target.files;\n    setImageFiles(imageFileInfo);\n    const imagePreviews = await Promise.all([...imageFileInfo].map(async imgFile => {\n      return new Promise((resolve, reject) => {\n        try {\n          const fileReader = new FileReader();\n          fileReader.readAsDataURL(imgFile);\n          fileReader.onload = e => resolve({\n            imgSrc: e.target.result,\n            fileName: imgFile.name\n          });\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }));\n    setPreviews(imagePreviews);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (let imageFile of imageFiles) {\n      formData.append(\"imageTest\", imageFile);\n    }\n    formData.append(\"public\", isPublic);\n    try {\n      const res = await axios.post(\"/images\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: e => {\n          setPercent(Math.round(100 * e.loaded / e.total));\n        }\n      });\n      if (isPublic) setImages(prevData => [...res.data, ...prevData]);\n      setMyImages(prevData => [...res.data, ...prevData]);\n      toast.success(\"success!\");\n      setTimeout(() => {\n        setPercent(0);\n        setPreviews([]);\n        inputRef.current.value = null;\n      }, 3000);\n    } catch (err) {\n      toast.error(err.response.data.message);\n      setPercent(0);\n      setPreviews([]);\n      console.error(err);\n    }\n  };\n  const previewImages = previews.map((preview, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n    style: {\n      width: 200,\n      height: 200,\n      objectFit: \"cover\"\n    },\n    src: preview.imgSrc,\n    alt: \"\",\n    className: `image-preview ${preview.imgSrc && \"image-preview-show\"}`\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this));\n  const fileName = previews.length === 0 ? \"Please upload image file\" : previews.reduce((previous, current) => previous + `${current.fileName},`, \"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        children: previewImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        percent: percent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-dropper\",\n        children: [fileName, /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: ref => {\n            inputRef.current = ref;\n          },\n          id: \"image\",\n          type: \"file\",\n          multiple: true,\n          accept: \"image/*\",\n          onChange: imageSelectHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"public-check\",\n        value: !isPublic,\n        onChange: () => setIsPublic(!isPublic)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"public-check\",\n        children: \"\\uBE44\\uACF5\\uAC1C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: \"100%\",\n          height: 40,\n          borderRadius: 3,\n          cursor: \"pointer\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UploadForm, \"LR9PiG18uX8TIt/ZBfNnQqYNP44=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","useContext","useRef","axios","toast","ProgressBar","ImageContext","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadForm","_s","setImages","setMyImages","imageFiles","setImageFiles","previews","setPreviews","percent","setPercent","isPublic","setIsPublic","inputRef","imageSelectHandler","event","imageFileInfo","target","files","imagePreviews","Promise","all","map","imgFile","resolve","reject","fileReader","FileReader","readAsDataURL","onload","e","imgSrc","result","fileName","name","err","onSubmit","preventDefault","formData","FormData","imageFile","append","res","post","headers","onUploadProgress","Math","round","loaded","total","prevData","data","success","setTimeout","current","value","error","response","message","console","previewImages","preview","index","style","width","height","objectFit","src","alt","className","_jsxFileName","lineNumber","columnNumber","length","reduce","previous","children","display","flexWrap","ref","id","type","multiple","accept","onChange","htmlFor","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/Users/byungsoochoi/Desktop/couple-album/client/src/components/UploadForm.js"],"sourcesContent":["import React, { useState, useContext, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./UploadForm.css\";\nimport { toast } from \"react-toastify\";\nimport ProgressBar from \"./ProgressBar\";\nimport { ImageContext } from \"../context/ImageContext\";\n\nconst UploadForm = () => {\n  const { setImages, setMyImages } = useContext(ImageContext);\n  const [imageFiles, setImageFiles] = useState(null);\n\n  const [previews, setPreviews] = useState([]);\n\n  const [percent, setPercent] = useState(0);\n  const [isPublic, setIsPublic] = useState(true);\n\n  const inputRef = useRef();\n\n  const imageSelectHandler = async (event) => {\n    const imageFileInfo = event.target.files;\n    setImageFiles(imageFileInfo);\n\n    const imagePreviews = await Promise.all(\n      [...imageFileInfo].map(async (imgFile) => {\n        return new Promise((resolve, reject) => {\n          try {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(imgFile);\n            fileReader.onload = (e) =>\n              resolve({ imgSrc: e.target.result, fileName: imgFile.name });\n          } catch (err) {\n            reject(err);\n          }\n        });\n      })\n    );\n    setPreviews(imagePreviews);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (let imageFile of imageFiles) {\n      formData.append(\"imageTest\", imageFile);\n    }\n    formData.append(\"public\", isPublic);\n\n    try {\n      const res = await axios.post(\"/images\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n        onUploadProgress: (e) => {\n          setPercent(Math.round((100 * e.loaded) / e.total));\n        },\n      });\n\n      if (isPublic) setImages((prevData) => [...res.data, ...prevData]);\n      setMyImages((prevData) => [...res.data, ...prevData]);\n\n      toast.success(\"success!\");\n\n      setTimeout(() => {\n        setPercent(0);\n        setPreviews([]);\n        inputRef.current.value = null;\n      }, 3000);\n    } catch (err) {\n      toast.error(err.response.data.message);\n      setPercent(0);\n      setPreviews([]);\n      console.error(err);\n    }\n  };\n\n  const previewImages = previews.map((preview, index) => (\n    <img\n      key={index}\n      style={{ width: 200, height: 200, objectFit: \"cover\" }}\n      src={preview.imgSrc}\n      alt=\"\"\n      className={`image-preview ${preview.imgSrc && \"image-preview-show\"}`}\n    />\n  ));\n\n  const fileName =\n    previews.length === 0\n      ? \"Please upload image file\"\n      : previews.reduce(\n          (previous, current) => previous + `${current.fileName},`,\n          \"\"\n        );\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>{previewImages}</div>\n        <ProgressBar percent={percent} />\n        <div className=\"file-dropper\">\n          {fileName}\n          <input\n            ref={(ref) => {\n              inputRef.current = ref;\n            }}\n            id=\"image\"\n            type=\"file\"\n            multiple={true}\n            accept=\"image/*\"\n            onChange={imageSelectHandler}\n          />\n        </div>\n        <input\n          type=\"checkbox\"\n          id=\"public-check\"\n          value={!isPublic}\n          onChange={() => setIsPublic(!isPublic)}\n        />\n        <label htmlFor=\"public-check\">비공개</label>\n        <button\n          type=\"submit\"\n          style={{\n            width: \"100%\",\n            height: 40,\n            borderRadius: 3,\n            cursor: \"pointer\",\n          }}\n        >\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default UploadForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}