{"ast":null,"code":"var _jsxFileName = \"/Users/byungsoochoi/Desktop/couple-album/client/src/components/UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState(\"Please upload image file\");\n  const imageSelectHandler = event => {\n    const imageFile = event.target.files[0];\n    setFile(imageFile);\n    setFileName(imageFile.name);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"imageTest\", file);\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"success\");\n    } catch (err) {\n      alert(\"fail\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"file\",\n        onChange: imageSelectHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UploadForm, \"gRxdm146NuqFq96oGMwsjesGsTw=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadForm","_s","file","setFile","fileName","setFileName","imageSelectHandler","event","imageFile","target","files","name","onSubmit","e","preventDefault","formData","FormData","append","res","post","headers","alert","err","children","htmlFor","_jsxFileName","lineNumber","columnNumber","id","type","onChange","_c","$RefreshReg$"],"sources":["/Users/byungsoochoi/Desktop/couple-album/client/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState(\"Please upload image file\");\n  const imageSelectHandler = (event) => {\n    const imageFile = event.target.files[0];\n    setFile(imageFile);\n    setFileName(imageFile.name);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"imageTest\", file);\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      alert(\"success\");\n    } catch (err) {\n      alert(\"fail\");\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <label htmlFor=\"image\">{fileName}</label>\n        <input id=\"image\" type=\"file\" onChange={imageSelectHandler} />\n        <button type=\"submit\"> Submit</button>\n      </form>\n    </>\n  );\n};\n\nexport default UploadForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,0BAA0B,CAAC;EACpE,MAAMY,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACvCP,OAAO,CAACK,SAAS,CAAC;IAClBH,WAAW,CAACG,SAAS,CAACG,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEf,IAAI,CAAC;IAClC,IAAI;MACF,MAAMgB,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,SAAS,EAAEJ,QAAQ,EAAE;QAChDK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFC,KAAK,CAAC,SAAS,CAAC;IAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZD,KAAK,CAAC,MAAM,CAAC;IACf;EACF,CAAC;EAED,oBACExB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACE1B,OAAA;MAAMe,QAAQ,EAAEA,QAAS;MAAAW,QAAA,gBACvB1B,OAAA;QAAO2B,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAEnB;MAAQ;QAAAA,QAAA,EAAAqB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzC9B,OAAA;QAAO+B,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAExB;MAAmB;QAAAF,QAAA,EAAAqB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9D9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAnB,QAAA,EAAAqB,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAvB,QAAA,EAAAqB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC,gBACP,CAAC;AAEP,CAAC;AAAC1B,EAAA,CAhCID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}