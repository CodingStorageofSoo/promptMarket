{"ast":null,"code":"var _jsxFileName = \"/Users/byungsoochoi/Desktop/couple-album/client/src/components/ImageList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ImageContext } from \"../context/ImageContext\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"./ImageList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageList = () => {\n  _s();\n  const {\n    images,\n    myImages,\n    isPublic,\n    setIsPublic\n  } = useContext(ImageContext);\n  const {\n    me\n  } = useContext(AuthContext);\n  const imgList = (isPublic ? images : myImages).map(image => /*#__PURE__*/_jsxDEV(Link, {\n    // 가상돔을 효율적으로 활용하기 위해서! 인덱스처럼 사용\n    to: `/images/${image._id}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"\",\n      src: `http://localhost:8080/uploads/${image.key}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, image.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: \"inline-block\",\n        marginRight: 10\n      },\n      children: [\"Image List (\", isPublic ? \"Public\" : \"Private\", \" Photo)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), me && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsPublic(!isPublic);\n        console.log(me);\n      },\n      children: (isPublic ? \"Private\" : \"Public\") + \" Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-list-container\",\n      children: [\" \", imgList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageList, \"k0/qzqhFgX0/I+WS3wNn15hEUmo=\");\n_c = ImageList;\nexport default ImageList;\nvar _c;\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"names":["React","useContext","useState","Link","ImageContext","AuthContext","jsxDEV","_jsxDEV","ImageList","_s","images","myImages","isPublic","setIsPublic","me","imgList","map","image","to","_id","children","alt","src","key","fileName","_jsxFileName","lineNumber","columnNumber","style","display","marginRight","onClick","console","log","className","_c","$RefreshReg$"],"sources":["/Users/byungsoochoi/Desktop/couple-album/client/src/components/ImageList.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ImageContext } from \"../context/ImageContext\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"./ImageList.css\";\n\nconst ImageList = () => {\n  const { images, myImages, isPublic, setIsPublic } = useContext(ImageContext);\n  const { me } = useContext(AuthContext);\n\n  const imgList = (isPublic ? images : myImages).map((image) => (\n    <Link\n      key={image.key} // 가상돔을 효율적으로 활용하기 위해서! 인덱스처럼 사용\n      to={`/images/${image._id}`}\n    >\n      <img alt=\"\" src={`http://localhost:8080/uploads/${image.key}`} />\n    </Link>\n  ));\n\n  return (\n    <div>\n      <h3 style={{ display: \"inline-block\", marginRight: 10 }}>\n        Image List ({isPublic ? \"Public\" : \"Private\"} Photo)\n      </h3>\n      {me && (\n        <button\n          onClick={() => {\n            setIsPublic(!isPublic);\n            console.log(me);\n          }}\n        >\n          {(isPublic ? \"Private\" : \"Public\") + \" Photo\"}\n        </button>\n      )}\n      <div className=\"image-list-container\"> {imgList}</div>\n    </div>\n  );\n};\n\nexport default ImageList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGZ,UAAU,CAACG,YAAY,CAAC;EAC5E,MAAM;IAAEU;EAAG,CAAC,GAAGb,UAAU,CAACI,WAAW,CAAC;EAEtC,MAAMU,OAAO,GAAG,CAACH,QAAQ,GAAGF,MAAM,GAAGC,QAAQ,EAAEK,GAAG,CAAEC,KAAK,iBACvDV,OAAA,CAACJ,IAAI;IACa;IAChBe,EAAE,EAAG,WAAUD,KAAK,CAACE,GAAI,EAAE;IAAAC,QAAA,eAE3Bb,OAAA;MAAKc,GAAG,EAAC,EAAE;MAACC,GAAG,EAAG,iCAAgCL,KAAK,CAACM,GAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,GAH5DV,KAAK,CAACM,GAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIV,CACP,CAAC;EAEF,oBACEpB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAIqB,KAAK,EAAE;QAAEC,OAAO,EAAE,cAAc;QAAEC,WAAW,EAAE;MAAG,CAAE;MAAAV,QAAA,GAAC,cAC3C,EAACR,QAAQ,GAAG,QAAQ,GAAG,SAAS,EAAC,SAC/C;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJb,EAAE,iBACDP,OAAA;MACEwB,OAAO,EAAEA,CAAA,KAAM;QACblB,WAAW,CAAC,CAACD,QAAQ,CAAC;QACtBoB,OAAO,CAACC,GAAG,CAACnB,EAAE,CAAC;MACjB,CAAE;MAAAM,QAAA,EAED,CAACR,QAAQ,GAAG,SAAS,GAAG,QAAQ,IAAI;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACT,eACDpB,OAAA;MAAK2B,SAAS,EAAC,sBAAsB;MAAAd,QAAA,GAAC,GAAC,EAACL,OAAO;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}