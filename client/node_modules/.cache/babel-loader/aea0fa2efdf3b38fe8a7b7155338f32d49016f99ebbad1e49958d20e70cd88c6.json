{"ast":null,"code":"var _jsxFileName = \"/Users/byungsoochoi/Desktop/couple-album/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [me, setMe] = useState();\n  useEffect(() => {\n    const sessionId = localStorage.getItem(\"sessionId\"); // the localStorage object is a built-in web API provided by the browser that allows you to store key-value pairs locally in the user's browser.\n\n    console.log(\"Session ID is\" + sessionId);\n    if (me) {\n      axios.defaults.headers.common.sessionid = me.sessionId;\n      localStorage.setItem(\"sessionId\", me.sessionId);\n    } else if (sessionId) {\n      axios.get(\"/users/me\", {\n        headers: {\n          sessionid: sessionId\n        }\n      }).then(result => setMe({\n        name: result.data.name,\n        userId: result.data.userId,\n        sessionId: result.data.sessionId\n      })).catch(err => {\n        console.error(err);\n        localStorage.removeItem(\"sesssionId\");\n        delete axios.defaults.headers.common.sessionid;\n      });\n    } else delete axios.defaults.headers.common.sessionid;\n  }, [me]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: [me, setMe],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"maZYp6x653Mg4Ysi8pnHWnIz1Ck=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","me","setMe","sessionId","localStorage","getItem","console","log","defaults","headers","common","sessionid","setItem","get","then","result","name","data","userId","catch","err","error","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/byungsoochoi/Desktop/couple-album/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [me, setMe] = useState();\n\n  useEffect(() => {\n    const sessionId = localStorage.getItem(\"sessionId\"); // the localStorage object is a built-in web API provided by the browser that allows you to store key-value pairs locally in the user's browser.\n\n    console.log(\"Session ID is\" + sessionId);\n\n    if (me) {\n      axios.defaults.headers.common.sessionid = me.sessionId;\n      localStorage.setItem(\"sessionId\", me.sessionId);\n    } else if (sessionId) {\n      axios\n        .get(\"/users/me\", { headers: { sessionid: sessionId } })\n        .then((result) =>\n          setMe({\n            name: result.data.name,\n            userId: result.data.userId,\n            sessionId: result.data.sessionId,\n          })\n        )\n        .catch((err) => {\n          console.error(err);\n          localStorage.removeItem(\"sesssionId\");\n          delete axios.defaults.headers.common.sessionid;\n        });\n    } else delete axios.defaults.headers.common.sessionid;\n  }, [me]);\n\n  return (\n    <AuthContext.Provider value={[me, setMe]}>{children}</AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;IAErDC,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGJ,SAAS,CAAC;IAExC,IAAIF,EAAE,EAAE;MACNR,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,SAAS,GAAGV,EAAE,CAACE,SAAS;MACtDC,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEX,EAAE,CAACE,SAAS,CAAC;IACjD,CAAC,MAAM,IAAIA,SAAS,EAAE;MACpBV,KAAK,CACFoB,GAAG,CAAC,WAAW,EAAE;QAAEJ,OAAO,EAAE;UAAEE,SAAS,EAAER;QAAU;MAAE,CAAC,CAAC,CACvDW,IAAI,CAAEC,MAAM,IACXb,KAAK,CAAC;QACJc,IAAI,EAAED,MAAM,CAACE,IAAI,CAACD,IAAI;QACtBE,MAAM,EAAEH,MAAM,CAACE,IAAI,CAACC,MAAM;QAC1Bf,SAAS,EAAEY,MAAM,CAACE,IAAI,CAACd;MACzB,CAAC,CACH,CAAC,CACAgB,KAAK,CAAEC,GAAG,IAAK;QACdd,OAAO,CAACe,KAAK,CAACD,GAAG,CAAC;QAClBhB,YAAY,CAACkB,UAAU,CAAC,YAAY,CAAC;QACrC,OAAO7B,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,SAAS;MAChD,CAAC,CAAC;IACN,CAAC,MAAM,OAAOlB,KAAK,CAACe,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,SAAS;EACvD,CAAC,EAAE,CAACV,EAAE,CAAC,CAAC;EAER,oBACEN,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE,CAACvB,EAAE,EAAEC,KAAK,CAAE;IAAAF,QAAA,EAAEA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAE/E,CAAC;AAAC7B,EAAA,CAhCWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}